name: CI Pipeline

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build:
        runs-on: ubuntu-latest

        steps: 
          - name: Checkout repository
            uses: actions/checkout@v2
  
          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.11'

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

          - name: Run Linter
            run:  python -m flake8 src

          - name: Setup mock database
            run: python setup_database.py

          - name: Run tests
            run: python -m pytest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
          - name: Checkout repository
            uses: actions/checkout@v2

          - name: Deploy to Render
            uses: JorgeLNJunior/render-deploy@v1.4.4
            with:
              service_id: ${{ secrets.RENDER_SERVICE_ID }}
              api_key: ${{ secrets.RENDER_API_KEY }}
              github_token: ${{ secrets.CI_CD_TOKEN }}
              wait_deploy: true
              github_deployment: true
    
    notify-success:
        runs-on: ubuntu-latest
        needs: deploy
        if: success()
        steps:
          - name: Send Telegram Notification
            uses: appleboy/telegram-action@master
            with:
              to: ${{ secrets.TELEGRAM_TO }}
              token: ${{ secrets.TELEGRAM_TOKEN }}
              message: "Pipeline executado com sucesso!"
              
          - name: Send Discord Notification
            env:
              DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
            run: |
              curl -H "Content-Type: application/json" \
              -d "{\"content\": \"Pipeline executado com sucesso!\"}" \
              $DISCORD_WEBHOOK_URL
              
    notify-failure:
        runs-on: ubuntu-latest
        needs: deploy
        if: failure()
        steps:
          - name: Send Telegram Notification
            uses: appleboy/telegram-action@master
            with:
              to: ${{ secrets.TELEGRAM_TO }}
              token: ${{ secrets.TELEGRAM_TOKEN }}
              message: "Pipeline falhou!"
              
          - name: Send Discord Notification
            env:
              DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
            run: |
              curl -H "Content-Type: application/json" \
              -d "{\"content\": \"Pipeline falhou!\"}" \
              $DISCORD_WEBHOOK_URL